plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id 'org.sonarqube' version '4.4.1.3373'
}
apply from: 'version.gradle'

group = 'com.innowise'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"
    implementation "org.apache.commons:commons-lang3:${versions.commonslang3}"
    implementation 'org.liquibase:liquibase-core'

    // querydsl
    implementation "javax.annotation:javax.annotation-api:${versions.javaxannotation}"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${versions.jakartapersistence}"
    implementation "com.querydsl:querydsl-jpa:${versions.querydsl}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"

    // jwt
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${versions.jjwt}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${versions.jjwt}"
    implementation "io.jsonwebtoken:jjwt-api:${versions.jjwt}"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.token', 'sqp_37a27efa72f62599e2997c91581c5ab206edd6ca'
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.required = true // used by sonarqube to display test coverage
    }
    dependsOn test // tests are required to run before generating the report
}